class Solution {
public:
    int minSubArrayLen(int s, vector<int>& nums) {
        int n=nums.size();
        int total=accumulate(nums.begin(),nums.end(),0);
        if(n==0 || total<s )
        {
            return 0;
        }
        int p1=0;
        int p2=0;
        int sum=0;
        int ans=INT_MAX;
        while(p2<n)
        {
            if(sum>=s)
            {
                ans=min(ans,(p2-p1));
                cout << p1 << " ";
                sum-=nums[p1];
                p1++;
            }
            else
            {
                sum+=nums[p2];
                p2++;
            }
        }
        while(sum>=s)
        {
            ans=min(ans,(p2-p1));
            cout << p1 << " ";
            sum-=nums[p1];
            p1++;
        }
        return ans;
    }
};
